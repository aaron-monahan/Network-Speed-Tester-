import java.io.*;
import java.net.Socket;
import java.sql.Date;

public class Client {
	private String host;
	private int port;
	private int downloadSpeed;
	private Socket socket;
	
    private static final int BUFFER_SIZE = 16384;
    
    
    public Client(String host, int port){
    	this.host = host;
    	this.port = port;

    }
    
    
    public void downloadTest() throws IOException
    {
    	long startTestTime = 0;
    	long testDuration = 20000; //20 seconds
    	long currentTime = 0;
    	int interactions = 0;
    	socket =  new Socket(host, port);
    	socket.setSoTimeout(10000); // times out if no data came after 10 seconds
    	int i = 0;
    	
//    	boolean exitLoop = true;
    	BufferedReader dataIn =  new BufferedReader(new InputStreamReader(socket.getInputStream()));
    	PrintWriter dataOut = new PrintWriter(socket.getOutputStream(), true);
    	System.out.println( "size buffer: " + socket.getReceiveBufferSize());
        
    	downloadSpeed = 0;
    	startTestTime =  System.currentTimeMillis( );
        while((startTestTime + testDuration) > currentTime)
        {
        	dataIn.readLine();
        	interactions++;
        	currentTime = System.currentTimeMillis();
        }
        dataOut.println("done");
        
    }
    
    private void setDownloadSpeed(long time, int interactions)
    {
    	downloadSpeed = (int) time * interactions;
    }

    public int getDownloadSpeed(){
    	return downloadSpeed;
    }
    
    
    private String prepareDownloadTest(int size){
    	StringBuffer myTest = new StringBuffer();
    	
    	while(size > 0)
    	{
    		size--;
    		myTest.append('t');
    	}
    	
    	return myTest.toString();
    }
    
    public void closeConnection(){
    	try {
			socket.close();
		} catch (IOException e) {
			System.out.println("Error: Socket already closed...");
		}
    }
	
}
